import { UserModel } from '../models/user';

export const SOCKET_SERVER_MESSAGE = {
  NEW_MESSAGE: 'NEW_MESSAGE',
  SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',
  SIGN_UP_FAIL: 'SIGN_UP_FAIL',
  LOG_IN_SUCCESS: 'LOG_IN_SUCCESS',
  LOG_IN_FAIL: 'LOG_IN_FAIL',
  USER_JOINED_ROOM: 'USER_JOINED_ROOM',
  USER_TYPING: 'USER_TYPING',
  USER_STOPPED_TYPING: 'USER_STOPPED_TYPING',
  USER_LEFT_ROOM: 'USER_LEFT_ROOM',
} as const;
export type SOCKET_SERVER_MESSAGE = typeof SOCKET_SERVER_MESSAGE;
// export const SOCKET_IO_SERVER_MESSAGES = Object.values(SOCKET_IO_SERVER_MESSAGES);
// export type SOCKET_IO_SERVER_MESSAGES = typeof SOCKET_IO_SERVER_MESSAGES;

export interface SocketServerMessagePayloads {
  [SOCKET_SERVER_MESSAGE.NEW_MESSAGE]: { user: UserModel; message: string };
  [SOCKET_SERVER_MESSAGE.SIGN_UP_SUCCESS]: { user: UserModel };
  [SOCKET_SERVER_MESSAGE.SIGN_UP_FAIL]: { user: UserModel; reason: string };
  [SOCKET_SERVER_MESSAGE.LOG_IN_SUCCESS]: { user: UserModel };
  [SOCKET_SERVER_MESSAGE.LOG_IN_FAIL]: { user: UserModel; reason: string };
  [SOCKET_SERVER_MESSAGE.USER_JOINED_ROOM]: { user: UserModel };
  [SOCKET_SERVER_MESSAGE.USER_TYPING]: { user: UserModel };
  [SOCKET_SERVER_MESSAGE.USER_STOPPED_TYPING]: { user: UserModel };
  [SOCKET_SERVER_MESSAGE.USER_LEFT_ROOM]: { user: UserModel };
}
