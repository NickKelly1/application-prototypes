"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const object_from_entries_1 = require("./object-from-entries");
const object_entries_1 = require("./object-entries");
exports.undefinedIfNull = (v) => {
    if (v === null)
        return undefined;
    return v;
};
/**
 * @description
 * Resolve the promise to undefined if it were to be null
 *
 * @param v
 */
exports.asyncUndefinedIfNull = (v) => __awaiter(void 0, void 0, void 0, function* () {
    const innerValue = yield v;
    if (innerValue === null)
        return undefined;
    return innerValue;
});
/**
 * @description
 * Return an object where any unll values are converted to undefined
 *
 * @param input
 */
function objectUndefinedIfNull(input) {
    const entries = object_entries_1.objectEntries(input);
    const mappedEntries = entries.map(([k, v]) => [k, v === null ? undefined : v]);
    const result = object_from_entries_1.objectFromEntries(mappedEntries);
    return result;
}
exports.objectUndefinedIfNull = objectUndefinedIfNull;
