"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * @description
 * Determines if the property exists on the object
 * Type guard
 *
 * @param obj
 * @param propertyName
 */
exports.hasProperty = (obj, property) => Object.prototype.hasOwnProperty.call(obj, property);
/**
 * @description
 * Determines if the property exists on the object and is of type string
 * Type guard
 *
 * @param obj
 * @param propertyName
 */
exports.hasStringProperty = (obj, property) => exports.hasProperty(obj, property) && typeof obj[property] === 'string';
/**
 * @description
 * Determines if the property exists on the object and is of type number
 * Type guard
 *
 * @param obj
 * @param propertyName
 */
exports.hasNumberProperty = (obj, property) => exports.hasProperty(obj, property) && typeof obj[property] === 'number';
/**
 * @description
 * Determines if the property exists on the object and is of type array
 * Type guard
 *
 * @param obj
 * @param propertyName
 */
exports.hasArrayProperty = (obj, property) => exports.hasProperty(obj, property) && obj[property] instanceof Array;
/**
 * @description
 * Determines if the property exists on the object and is of type object
 * Type guard
 *
 * @param obj
 * @param propertyName
 */
exports.hasObjectProperty = (obj, property) => exports.hasProperty(obj, property) && obj[property] instanceof Object;
/**
 * @description
 * Determines if the property exists on the object and is of type function
 * Type guard
 *
 * @param obj
 * @param propertyName
 */
exports.hasFunctionProperty = (obj, property) => exports.hasProperty(obj, property) && typeof obj[property] === 'function';
/**
 * @description
 * Type guard for determining if a value is a string
 *
 * @param input
 */
exports.isString = (input) => typeof input === 'string';
/**
 * @description
 * Type guard for determining if a value is a number
 *
 * @param input
 */
exports.isNumber = (input) => typeof input === 'number';
/**
 * Stolen from apollo-tools (I like their way of checking :))
 *
 * @param value
 */
function isNotNullOrUndefined(value) {
    return value !== null && typeof value !== 'undefined';
}
exports.isNotNullOrUndefined = isNotNullOrUndefined;
/**
 * @description
 * Is the entries value not null or undefined?
 *
 * @param entry
 */
function entryNotNullOrUndefined(entry) {
    return isNotNullOrUndefined(entry[1]);
}
exports.entryNotNullOrUndefined = entryNotNullOrUndefined;
